/*
Deployment script for OppAnalysisEngine

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "OppAnalysisEngine"
:setvar DefaultFilePrefix "OppAnalysisEngine"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[Member_Claims_PPPM]...';


GO
ALTER TABLE [dbo].[Member_Claims_PPPM] ALTER COLUMN [stp] INT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[Member_Pharmacy_PPPM]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Member_Pharmacy_PPPM] (
    [ClientID]          INT             NULL,
    [PriMemberID]       VARCHAR (100)   NULL,
    [MemberID]          VARCHAR (100)   NULL,
    [YrMth]             CHAR (6)        NULL,
    [Claims]            INT             NULL,
    [Paid]              MONEY           NULL,
    [TotPaid]           MONEY           NULL,
    [AvgDaysPresc]      DECIMAL (38, 6) NULL,
    [ClaimsGen]         INT             NULL,
    [PaidGen]           MONEY           NULL,
    [TotPaidGen]        MONEY           NULL,
    [AvgDaysPrescGen]   DECIMAL (38, 6) NULL,
    [ClaimsBrand]       INT             NULL,
    [PaidBrand]         MONEY           NULL,
    [TotPaidBrand]      MONEY           NULL,
    [AvgDaysPrescBrand] DECIMAL (38, 6) NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Member_Pharmacy_PPPM])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Member_Pharmacy_PPPM] ([ClientID], [MemberID], [YrMth], [Claims], [Paid], [TotPaid], [AvgDaysPresc], [ClaimsGen], [PaidGen], [TotPaidGen], [AvgDaysPrescGen], [ClaimsBrand], [PaidBrand], [TotPaidBrand], [AvgDaysPrescBrand])
        SELECT [ClientID],
               [MemberID],
               [YrMth],
               [Claims],
               [Paid],
               [TotPaid],
               [AvgDaysPresc],
               [ClaimsGen],
               [PaidGen],
               [TotPaidGen],
               [AvgDaysPrescGen],
               [ClaimsBrand],
               [PaidBrand],
               [TotPaidBrand],
               [AvgDaysPrescBrand]
        FROM   [dbo].[Member_Pharmacy_PPPM];
    END

DROP TABLE [dbo].[Member_Pharmacy_PPPM];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Member_Pharmacy_PPPM]', N'Member_Pharmacy_PPPM';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Member_Claims_Util_PPPY_vw]...';


GO

/***********************************************
*   Name:		 Member_Claims_Util_PPPY_vw
*
*   Object:	 View
*
*   Created:	 1/18/2019
*
*   Description:	Summarized Member, Medical and Pharamcy data by Analytic Year
*					Includes cost and utilization - total, less exclusion and less exclusions
					and stop loss
*   Updated
*
************************************************/
ALTER VIEW [dbo].[Member_Claims_Util_PPPY_vw]
	AS 
	select m.clientID 
    , m.PriMemberID
    , m.MemberID
	, max([MemberRelationship])  as Relationship
    , AnalyticYear as Year
	, count(distinct m.YrMthKey) as NbrMths
    , max(Custom1) as Custom1
    , max(Custom2) as Custom2
    , max(Custom3) as Custom3
    , max(Custom4) as Custom4
    , isnull(max(ExclFlg),0) as ExclFlg
    , max([InsTramaFlg]) as InsTramaFlg
    , sum(c.claims) as MedClaims
    , sum(c.Paid) as MedPaid
    , sum(p.claims) as PharmClaims
    , sum(p.paid) as PharmPaid
    , isnull(sum(c.Paid),0) + isnull(sum(p.paid),0) as TotalPaid


    , iif(max(ExclFlg) = 1,0, sum(c.ClaimsLssTrama)) as ClaimswExcl 
    , sum(PaidLssTrama) as MedwLessTrama
    , iif(max(ExclFlg) = 1,0, iif(sum(PaidLssTrama) > 100000 , 100000, sum(PaidLssTrama))) MedwStopLossExcl

    , (iif(max(ExclFlg) = 1,0, iif(isnull(sum(PaidLssTrama),0) + isnull(sum(p.paid),0) > 100000 
		  , 100000, isnull(sum(PaidLssTrama),0) + isnull(sum(p.paid),0) )) )
			 - (iif(max(ExclFlg) = 1,0, iif(sum(PaidLssTrama) > 100000 , 100000, sum(PaidLssTrama)))) PharmwStopLossExcl

    , isnull(sum(PaidLssTrama),0) + isnull(sum(p.paid),0)  as TotalwLessTrama
    , iif(max(ExclFlg) = 1,0, iif(isnull(sum(PaidLssTrama),0) + isnull(sum(p.paid),0) > 100000 
		  , 100000, isnull(sum(PaidLssTrama),0) + isnull(sum(p.paid),0) )) TotalwStopLossExcl

    , sum([IPPaid]) as [IPPaid]
    , sum([IPPaidLssTrama]) as [IPPaidLssTrama]
    , iif(max(ExclFlg) = 1,0,sum([IPPaidLssTrama]* stp)) as [IPPaidLssTramaStExcl]
    --, iif(max(ExclFlg) = 1,0,iif(sum(PaidLssTrama) > 100000 , 100000,sum([IPPaidLssTrama]))) as [IPPaidLssTramaStExcl]

    , sum([ERPaid]) as [ERPaid]
    , sum([ERPaidLssTrama]) as [ERPaidLssTrama]
    , iif(max(ExclFlg) = 1,0, sum([ERPaidLssTrama] * stp)) as [ERPaidLssTramaStExcl]

    , sum([IPAdm]) as IPAdm
    , iif(max(ExclFlg) = 0, sum([IPltAdm]),0) as [IPAdmLssExcl]

    , sum([IPDys]) as [IPDys]
    , iif(max(ExclFlg) = 0, sum([IPltDys]),0) as [IPDysLssExcl]

    , sum([ERDys]) as [ERDys]
    , iif(max(ExclFlg) = 0, sum([ERltDys]), 0) as [ERDysLssExcl]

    , sum([OPDys]) as [OPDys]
    , iif(max(ExclFlg) = 0 , sum([OPDys]), 0) as [OPDysLssExcl]

    , sum([OVDys]) as [OVDys]
    , iif(max(ExclFlg) = 0 , sum([OVDys]), 0) as [OVDysLssExcl]

    , sum([ClaimDys]) as [ClaimDys]
    , iif(max(ExclFlg) = 0 , sum([ClaimDysLssTrama]),0) as [ClaimDysLssExcl]

from [dbo].[Member_PPPM]  m 
    left join Member_Claims_PPPM c
	   on m.ClientID = C.ClientID
		  AND m.PriMemberID = c.PriMemberID
		  AND m.MemberID = c.MemberID
		  and m.YrMthKey = c.YrMth
    left join Member_Pharmacy_PPPM p 
	   on m.ClientID = p.ClientID
		  AND m.PriMemberID = p.PriMemberID
		  AND m.MemberID = P.MemberID
		  and m.YrMthKey = p.YrMth
where YrMthKey >= 1401
group by m.clientID 
    , m.PriMemberID
    , m.MemberID
   , m.AnalyticYear
GO
PRINT N'Altering [dbo].[Member_Pharmacy_PPPM_vw]...';


GO

/***********************************************
*   Name:		 dbo.Member_Pharmacy_PPPM_vw
*
*   Object:	 View
*
*   Created:	 1/18/2019
*
*   Description:	Summarized the MemberProfile_Base by Calander and Analytical Year
*
*   Updated
*
************************************************/
ALTER view [dbo].[Member_Pharmacy_PPPM_vw]
as
select  ClientID
	, PriMemberID
    , MemberID
    , p.[YrMth] 
    , Count(distinct ClaimNumber) as Claims 
    , Sum(PaidAmt) as Paid
    , sum(TotalPaidAll) as TotPaid
    , Sum(DaysSupply)/(datediff(day, max([FirstDayOfMonth]),max([LastDayOfMonth]))+1) as AvgDaysPresc

    , Count(distinct case when [GenericIndic] = 1 then ClaimNumber end) as ClaimsGen
    , sum(case when [GenericIndic] = 1 then PaidAmt end) as PaidGen
    , sum(case when [GenericIndic] = 1 then TotalPaidAll end) as TotPaidGen
    , Sum(case when [GenericIndic] = 1 then DaysSupply end )/(datediff(day, max([FirstDayOfMonth]),max([LastDayOfMonth]))+1) as AvgDaysPrescGen

    , Count(distinct case when [GenericIndic] = 0 then ClaimNumber end) as ClaimsBrand
    , sum(case when [GenericIndic] = 0 then PaidAmt end) as PaidBrand
    , sum(case when [GenericIndic] = 0 then TotalPaidAll end) as TotPaidBrand
    , Sum(case when [GenericIndic] = 0 then DaysSupply end )/(datediff(day, max([FirstDayOfMonth]),max([LastDayOfMonth]))+1) as AvgDaysPrescBrand

from [dbo].[PharmClaims_Base] p
    inner join [dbo].[DateTable_Month] d
	   on p.YrMth = d.YrMth
Group by ClientID 
   , PriMemberID
    , MemberID
    , p.[YrMth] 
    , [Year] 
    , [Month]
GO
PRINT N'Update complete.';


GO
